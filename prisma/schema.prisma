// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name     String
  email    String    @unique
  password String
  posts    Post[]
  profile  Profile?
  address  Address[]

  @@index([name, email])
}

model Address {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  street  String
  city    String
  state   String
  country String
  zipCode String
  userId  String
  user    User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

model Post {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title     String
  content   String?
  keywords  String?
  published Boolean   @default(false)
  author    User?     @relation(fields: [authorId], references: [id], onUpdate: SetNull, onDelete: NoAction)
  authorId  String?
  tags      Tag[]
  PostTag   PostTag[]

  @@unique([title, authorId])
}

model Profile {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bio    String
  user   User   @relation(fields: [userId], references: [id], onUpdate: SetDefault, onDelete: Cascade)
  userId String @unique
}

model Tag {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name    String    @unique
  posts   Post[]
  PostTag PostTag[]
}

model PostTag {
  postId String
  tagId  String
  post   Post   @relation(fields: [postId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  tag    Tag    @relation(fields: [tagId], references: [id], onUpdate: NoAction, onDelete: NoAction)

  @@id([postId, tagId])
}
